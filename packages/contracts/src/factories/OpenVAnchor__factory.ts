/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OpenVAnchor, OpenVAnchorInterface } from "../OpenVAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "srcResourceID",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "srcResourceID",
            type: "bytes32",
          },
        ],
        internalType: "struct OpenLinkableAnchor.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafindex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_leafIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_srcResourceID",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "delegatedCalldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "blinding",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint32",
        name: "commitmentIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "withdrawAndUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "destinationChainId",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "delegatedCalldata",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blinding",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000805462010000600160501b03191690556005805463ffffffff191690553480156200003057600080fd5b506040516200390c3803806200390c833981016040819052620000539162000396565b838383808284828282808260008263ffffffff1611620000c65760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106200011e5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000bd565b6000805463ffffffff60501b19166a010000000000000000000063ffffffff851602178155600280546001600160a01b0319166001600160a01b0384161790555b8263ffffffff168163ffffffff1610156200022457600254604051631d052ab160e31b815263ffffffff831660048201526001600160a01b039091169063e82955889060240160206040518083038186803b158015620001be57600080fd5b505afa158015620001d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f991906200037c565b63ffffffff8216600090815260036020526040902055806200021b816200042e565b9150506200015f565b506040805180820190915260025481906001600160a01b031663e82955886200024f60018762000406565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156200028d57600080fd5b505afa158015620002a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c891906200037c565b8152600060209182018190528052600180825282517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49559101517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a55600455505060058054600160201b600160c01b0319166401000000006001600160a01b03959095169490940293909317909255505050505060609390931b6001600160601b0319166080525062000484945050505050565b6000602082840312156200038f57600080fd5b5051919050565b60008060008060808587031215620003ad57600080fd5b845163ffffffff81168114620003c257600080fd5b6020860151909450620003d5816200046b565b6040860151909350620003e8816200046b565b6060860151909250620003fb816200046b565b939692955090935050565b600063ffffffff8381169083168181101562000426576200042662000455565b039392505050565b600063ffffffff808316818114156200044b576200044b62000455565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146200048157600080fd5b50565b60805160601c613423620004e9600039600081816109ca01528181610cc601528181610da101528181610ed9015281816112940152818161176501528181611835015281816118cb015281816123050152818161239d01526123ea01526134236000f3fe6080604052600436106102c95760003560e01c80638c832b1311610175578063c2b40ae4116100dc578063e70ea87c11610095578063f178e47c1161006f578063f178e47c1461095b578063fa73168714610988578063fc0c546a146109b8578063fc7e9c6f146109ec57600080fd5b8063e70ea87c146108da578063ec73295914610907578063ed33639f1461093b57600080fd5b8063c2b40ae4146107ac578063c80916d4146107f5578063cd87a3b414610835578063dbc916b81461084a578063e4a301161461088a578063e5285dcc146108aa57600080fd5b80639fa12d0b1161012e5780639fa12d0b146107005780639ff800631461049c578063a07b7e1d1461072d578063ba70f75714610740578063bc063e1a14610593578063c2230d6e1461076e57600080fd5b80638c832b13146106445780638ea3099e146106645780638f1c56bd1461068457806390eeb02b1461069a57806392156311146106bd57806394eee060146106ed57600080fd5b806355adb4fa1161023457806378abb49b116101ed578063839df945116101c7578063839df945146105ab578063840b2791146105db5780638b7e8782146105f15780638c0d34d81461062257600080fd5b806378abb49b1461056a5780637c2ec684146105805780637fe24ffe1461059357600080fd5b806355adb4fa146104bc5780635d2d766c146104cf578063616e0957146105025780636ad481f3146105225780636d9833e31461052a57806372c1ad031461054a57600080fd5b8063414a37ba11610286578063414a37ba146103c057806343e7119f146103f4578063460b53e31461042c5780634c830cbd1461044c5780634ecf518b146104785780634f4012411461049c57600080fd5b80630b27fb9a146102ce57806311e4dcb9146102ff57806317cc915c1461032f5780631e6276171461035f5780631f7f99f7146103815780633408e470146103a3575b600080fd5b3480156102da57600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b34801561030b57600080fd5b5061031f61031a366004612de0565b610a10565b60405190151581526020016102f6565b34801561033b57600080fd5b5061031f61034a366004612d44565b600b6020526000908152604090205460ff1681565b34801561036b57600080fd5b50610374610aa5565b6040516102f69190612f5e565b34801561038d57600080fd5b506103a161039c366004612e02565b610c41565b005b3480156103af57600080fd5b50465b6040519081526020016102f6565b3480156103cc57600080fd5b506103b27f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561040057600080fd5b506103b261040f366004612e02565b600960209081526000928352604080842090915290825290205481565b34801561043857600080fd5b506103a1610447366004612c11565b610c9a565b34801561045857600080fd5b50610461610d27565b60405165ffffffffffff90911681526020016102f6565b34801561048457600080fd5b506000546102e590600160501b900463ffffffff1681565b3480156104a857600080fd5b506103a16104b7366004612c11565b610d75565b6103a16104ca366004612b5b565b610dd0565b3480156104db57600080fd5b506102e56104ea366004612d44565b600a6020526000908152604090205463ffffffff1681565b34801561050e57600080fd5b5061031f61051d366004612ce6565b610f45565b6103a1611271565b34801561053657600080fd5b5061031f610545366004612d44565b6112fc565b34801561055657600080fd5b506103a1610565366004612c3d565b61137d565b34801561057657600080fd5b506103b2600f5481565b6103a161058e366004612e25565b611501565b34801561059f57600080fd5b506103b2600160f81b81565b3480156105b757600080fd5b5061031f6105c6366004612d44565b600c6020526000908152604090205460ff1681565b3480156105e757600080fd5b506103b2600e5481565b3480156105fd57600080fd5b50610609600160f81b81565b6040516001600160f01b031990911681526020016102f6565b34801561062e57600080fd5b506106376115e9565b6040516102f69190612f96565b34801561065057600080fd5b506103a161065f366004612e02565b611670565b34801561067057600080fd5b506103b261067f366004612dab565b6116c0565b34801561069057600080fd5b506103b2600d5481565b3480156106a657600080fd5b506000546102e59062010000900463ffffffff1681565b3480156106c957600080fd5b5061031f6106d8366004612d44565b60009081526007602052604090205460ff1690565b6103a16106fb366004612c11565b61174c565b34801561070c57600080fd5b5061072061071b366004612c72565b611901565b6040516102f69190612f18565b6103a161073b366004612d76565b6119c9565b34801561074c57600080fd5b506000805462010000900463ffffffff168152600160205260409020546103b2565b34801561077a57600080fd5b50610794610789366004612d44565b65ffffffffffff1690565b6040516001600160401b0390911681526020016102f6565b3480156107b857600080fd5b506107e06107c7366004612d44565b6001602081905260009182526040909120805491015482565b604080519283526020830191909152016102f6565b34801561080157600080fd5b5060055461081d9064010000000090046001600160a01b031681565b6040516001600160a01b0390911681526020016102f6565b34801561084157600080fd5b506102e5601e81565b34801561085657600080fd5b5061086a610865366004612d44565b611f26565b6040805194855260208501939093529183015260608201526080016102f6565b34801561089657600080fd5b506103a16108a5366004612de0565b611f60565b3480156108b657600080fd5b5061031f6108c5366004612d44565b6000908152600b602052604090205460ff1690565b3480156108e657600080fd5b506103b26108f5366004612d44565b60066020526000908152604090205481565b34801561091357600080fd5b506103b27f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561094757600080fd5b5060025461081d906001600160a01b031681565b34801561096757600080fd5b506103b2610976366004612d44565b60036020526000908152604090205481565b34801561099457600080fd5b5061031f6109a3366004612d44565b60076020526000908152604090205460ff1681565b3480156109c457600080fd5b5061081d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156109f857600080fd5b506000546102e590600160301b900463ffffffff1681565b600081610a1f57506000610a9f565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610a6857600192505050610a9f565b63ffffffff8116610a775750601e5b80610a81816132db565b9150508163ffffffff168163ffffffff161415610a36576000925050505b92915050565b600854606090600090610ab99060016130cb565b6001600160401b03811115610ad057610ad06133bf565b604051908082528060200260200182016040528015610af9578160200160208202803683370190505b50905060005b600854811015610c3b57610b148160016130cb565b60085410610b645760088181548110610b2f57610b2f6133a9565b906000526020600020906004020160010154828281518110610b5357610b536133a9565b602002602001018181525050610c29565b6002546000546001600160a01b039091169063e829558890610b9590600190600160501b900463ffffffff1661324f565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b158015610bd257600080fd5b505afa158015610be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0a9190612d5d565b828281518110610c1c57610c1c6133a9565b6020026020010181815250505b80610c33816132fb565b915050610aff565b50919050565b60055464010000000090046001600160a01b03163314610c7c5760405162461bcd60e51b8152600401610c7390613064565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600e8290555050565b604051630594d27160e31b81523360048201526001600160a01b038381166024830152604482018390527f00000000000000000000000000000000000000000000000000000000000000001690632ca69388906064015b600060405180830381600087803b158015610d0b57600080fd5b505af1158015610d1f573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b03198116602284015283518084036006018152602690930190935260009291610d6a81613274565b60d01c935050505090565b60405163130e405b60e11b81523360048201526001600160a01b038381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690606401610cf1565b60026004541415610df35760405162461bcd60e51b8152600401610c739061302d565b60026004556000610e02610d27565b8789888051906020012088604051602001610e21959493929190612ed4565b604051602081830303815290604052805190602001209050610e4584828585612089565b610e885760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290283937b7b360611b6044820152606401610c73565b610e9230886122ed565b6000818152600b602052604090819020805460ff1916600117905551632404142f60e11b81526001600160a01b038a811660048301526024820189905289811660448301527f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015610f1d57600080fd5b505af1158015610f31573d6000803e3d6000fd5b505060016004555050505050505050505050565b6000610f6a82600081518110610f5d57610f5d6133a9565b60200260200101516112fc565b610fb65760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610c73565b600854610fc49060016130cb565b8251146110135760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610c73565b600160005b60085481101561111a57600060088281548110611037576110376133a9565b906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505090506110ad81600001518684600161109091906130cb565b815181106110a0576110a06133a9565b6020026020010151610a10565b6110f95760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610c73565b82611103816132fb565b935050508080611112906132fb565b915050611018565b505b60085461112a9060016130cb565b8114611268576002546000546001600160a01b039091169063e82955889061116190600190600160501b900463ffffffff1661324f565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b15801561119e57600080fd5b505afa1580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d69190612d5d565b8382815181106111e8576111e86133a9565b6020026020010151146112565760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610c73565b80611260816132fb565b91505061111c565b50600192915050565b604051630594d27160e31b815233600482015260006024820181905260448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632ca693889034906064016000604051808303818588803b1580156112e157600080fd5b505af11580156112f5573d6000803e3d6000fd5b5050505050565b60008161130b57506000919050565b60005462010000900463ffffffff16805b63ffffffff8116600090815260016020526040902054841415611343575060019392505050565b63ffffffff81166113525750601e5b8061135c816132db565b9150508163ffffffff168163ffffffff16141561131c575060009392505050565b60055464010000000090046001600160a01b031633146113af5760405162461bcd60e51b8152600401610c7390613064565b6001600160a01b0382166113fb5760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610c73565b60055463ffffffff8083169116106114455760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610c73565b60055461145a9063ffffffff166104186130e3565b63ffffffff168163ffffffff16106114c45760405162461bcd60e51b815260206004820152602760248201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686044820152660c2dc40626068760cb1b6064820152608401610c73565b600580546001600160c01b0319166401000000006001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b600260045414156115245760405162461bcd60e51b8152600401610c739061302d565b6002600455600f5486111561158e5760405162461bcd60e51b815260206004820152602a60248201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706044820152691bdcda5d105b5bdd5b9d60b21b6064820152608401610c73565b60008587868680519060200120856040516020016115b0959493929190612ed4565b6040516020818303038152906040528051906020012090506115d2838861174c565b6115db8161244b565b505060016004555050505050565b60606008805480602002602001604051908101604052809291908181526020016000905b8282101561166757838290600052602060002090600402016040518060800160405290816000820154815260200160018201548152602001600282015481526020016003820154815250508152602001906001019061160d565b50505050905090565b60055464010000000090046001600160a01b031633146116a25760405162461bcd60e51b8152600401610c7390613064565b6005805463ffffffff191663ffffffff8316179055600f8290555050565b604051635bb9399560e01b815260048101839052602481018290526000906001600160a01b03851690635bb939959060440160206040518083038186803b15801561170a57600080fd5b505afa15801561171e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117429190612d5d565b90505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b1580156117af57600080fd5b505afa1580156117c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e79190612d5d565b90506001600160a01b0383166118995780341461180357600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b15801561187b57600080fd5b505af115801561188f573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d6903490608401611862565b505050565b60606000826001600160401b0381111561191d5761191d6133bf565b604051908082528060200260200182016040528015611946578160200160208202803683370190505b50905060005b838110156119c157611985858583818110611969576119696133a9565b905060200201356000908152600b602052604090205460ff1690565b156119af57600182828151811061199e5761199e6133a9565b911515602092830291909101909101525b806119b9816132fb565b91505061194c565b509392505050565b60055464010000000090046001600160a01b031633146119fb5760405162461bcd60e51b8152600401610c7390613064565b60026004541415611a1e5760405162461bcd60e51b8152600401610c739061302d565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b158015611a7057600080fd5b505afa158015611a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa89190612d22565b15611dbd576001600160401b0381166000908152600660205260409020546008805463ffffffff861692908110611ae157611ae16133a9565b90600052602060002090600402016002015410611b405760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610c73565b600860066000836001600160401b031681526020019081526020016000205481548110611b6f57611b6f6133a9565b90600052602060002090600402016002015462010000611b8f91906130cb565b8363ffffffff1610611bf35760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610c73565b600860066000836001600160401b031681526020019081526020016000205481548110611c2257611c226133a9565b9060005260206000209060040201600301548214611c825760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610c73565b6001600160401b0381166000908152600660205260409020546008805463ffffffff8616919083908110611cb857611cb86133a9565b9060005260206000209060040201600201819055508460088281548110611ce157611ce16133a9565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e91611d269163ffffffff909116906130e3565b611d30919061335a565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611f1b565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b60088181548110611f3657600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff1615808015611f805750600054600160ff909116105b80611f9a5750303b158015611f9a575060005460ff166001145b611ffd5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c73565b6000805460ff191660011790558015612020576000805461ff0019166101001790555b6005805463ffffffff1916905561203683600e55565b61203f82600f55565b80156118fc576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60008383825b87518160ff161015612239576120a660028361335a565b63ffffffff166121665760025488516001600160a01b0390911690635bb939959085908b9060ff86169081106120de576120de6133a9565b602002602001015160001c6040518363ffffffff1660e01b815260040161210f929190918252602082015260400190565b60206040518083038186803b15801561212757600080fd5b505afa15801561213b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215f9190612d5d565b925061221a565b60025488516001600160a01b0390911690635bb93995908a9060ff8516908110612192576121926133a9565b602002602001015160001c8560001c6040518363ffffffff1660e01b81526004016121c7929190918252602082015260400190565b60206040518083038186803b1580156121df57600080fd5b505afa1580156121f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122179190612d5d565b92505b61222560028361310b565b9150806122318161333a565b91505061208f565b506000805b60085481101561229157818061227d575061227d60088281548110612265576122656133a9565b90600052602060002090600402016000015487610a10565b915080612289816132fb565b91505061223e565b5080806122a257506122a2856112fc565b9050806122e05760405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a59081c9bdbdd60a21b6044820152606401610c73565b5050909114949350505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561234f57600080fd5b505afa158015612363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123879190612d5d565b90508181106123c4576118fc6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001684846124b5565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561242e57600080fd5b505af1158015612442573d6000803e3d6000fd5b50505050505050565b61245481612507565b506000547f7820cafa2ee4e973e876df3308134064ca72c7d967b1a79ff83049404deb122790829061249590600190600160301b900463ffffffff1661324f565b6040805192835263ffffffff90911660208301520160405180910390a150565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526118fc9084906125ea565b6000818152600c602052604081205460ff16156125705760405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610c73565b600061257b836126bc565b6000848152600c602052604090819020805460ff191660011790555190915083907fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b5906125dc908490429063ffffffff929092168252602082015260400190565b60405180910390a292915050565b600061263f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661293a9092919063ffffffff16565b8051909150156118fc578080602001905181019061265d9190612d22565b6118fc5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c73565b6000805463ffffffff600160301b82048116916126e391600160501b909104166002613173565b63ffffffff168163ffffffff1614156127575760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610c73565b8083600080805b60005463ffffffff600160501b909104811690821610156128855761278460028661335a565b63ffffffff1661283157600254604051631d052ab160e31b815263ffffffff831660048201528594506001600160a01b039091169063e82955889060240160206040518083038186803b1580156127da57600080fd5b505afa1580156127ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128129190612d5d565b63ffffffff82166000908152600360205260409020859055915061284d565b63ffffffff811660009081526003602052604090205492508391505b600254612864906001600160a01b031684846116c0565b935061287160028661310b565b94508061287d81613316565b91505061275e565b5060008054601e906128a49062010000900463ffffffff1660016130e3565b6128ae919061335a565b6000805465ffffffff000019166201000063ffffffff84160217905590506128d78660016130e3565b6000805469ffffffff0000000000001916600160301b63ffffffff93841681029190911780835560408051808201825298895291900483166020808901918252949093168252600193849052902094518555519301929092555091949350505050565b60606117428484600085856001600160a01b0385163b61299c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c73565b600080866001600160a01b031685876040516129b89190612eb8565b60006040518083038185875af1925050503d80600081146129f5576040519150601f19603f3d011682016040523d82523d6000602084013e6129fa565b606091505b5091509150612a0a828286612a15565b979650505050505050565b60608315612a24575081611745565b825115612a345782518084602001fd5b8160405162461bcd60e51b8152600401610c739190612ffa565b600082601f830112612a5f57600080fd5b813560206001600160401b03821115612a7a57612a7a6133bf565b8160051b612a8982820161309b565b838152828101908684018388018501891015612aa457600080fd5b600093505b85841015612ac7578035835260019390930192918401918401612aa9565b50979650505050505050565b600082601f830112612ae457600080fd5b81356001600160401b03811115612afd57612afd6133bf565b612b10601f8201601f191660200161309b565b818152846020838601011115612b2557600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff81168114612b5657600080fd5b919050565b600080600080600080600080610100898b031215612b7857600080fd5b8835612b83816133d5565b97506020890135612b93816133d5565b96506040890135955060608901356001600160401b0380821115612bb657600080fd5b612bc28c838d01612ad3565b965060808b0135955060a08b0135915080821115612bdf57600080fd5b50612bec8b828c01612a4e565b935050612bfb60c08a01612b42565b915060e089013590509295985092959890939650565b60008060408385031215612c2457600080fd5b8235612c2f816133d5565b946020939093013593505050565b60008060408385031215612c5057600080fd5b8235612c5b816133d5565b9150612c6960208401612b42565b90509250929050565b60008060208385031215612c8557600080fd5b82356001600160401b0380821115612c9c57600080fd5b818501915085601f830112612cb057600080fd5b813581811115612cbf57600080fd5b8660208260051b8501011115612cd457600080fd5b60209290920196919550909350505050565b600060208284031215612cf857600080fd5b81356001600160401b03811115612d0e57600080fd5b612d1a84828501612a4e565b949350505050565b600060208284031215612d3457600080fd5b8151801515811461174557600080fd5b600060208284031215612d5657600080fd5b5035919050565b600060208284031215612d6f57600080fd5b5051919050565b600080600060608486031215612d8b57600080fd5b83359250612d9b60208501612b42565b9150604084013590509250925092565b600080600060608486031215612dc057600080fd5b8335612dcb816133d5565b95602085013595506040909401359392505050565b60008060408385031215612df357600080fd5b50508035926020909101359150565b60008060408385031215612e1557600080fd5b82359150612c6960208401612b42565b60008060008060008060c08789031215612e3e57600080fd5b86359550602087013565ffffffffffff81168114612e5b57600080fd5b94506040870135612e6b816133d5565b935060608701356001600160401b03811115612e8657600080fd5b612e9289828a01612ad3565b9350506080870135612ea3816133d5565b8092505060a087013590509295509295509295565b60008251612eca8184602087016132ab565b9190910192915050565b60d09590951b6001600160d01b0319168552600685019390935260609190911b6bffffffffffffffffffffffff19166026840152603a830152605a820152607a0190565b6020808252825182820181905260009190848201906040850190845b81811015612f52578351151583529284019291840191600101612f34565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612f5257835183529284019291840191600101612f7a565b602080825282518282018190526000919060409081850190868401855b82811015612fed57815180518552868101518786015285810151868601526060908101519085015260809093019290850190600101612fb3565b5091979650505050505050565b60208152600082518060208401526130198160408501602087016132ab565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b604051601f8201601f191681016001600160401b03811182821017156130c3576130c36133bf565b604052919050565b600082198211156130de576130de61337d565b500190565b600063ffffffff8083168185168083038211156131025761310261337d565b01949350505050565b600063ffffffff8084168061312257613122613393565b92169190910492915050565b600181815b8085111561316b578163ffffffff048211156131515761315161337d565b8085161561315e57918102915b93841c9390800290613133565b509250929050565b600063ffffffff612d1a81851682851660008261319257506001610a9f565b8161319f57506000610a9f565b81600181146131b557600281146131bf576131f0565b6001915050610a9f565b60ff8411156131d0576131d061337d565b6001841b915063ffffffff8211156131ea576131ea61337d565b50610a9f565b5060208310610133831016604e8410600b8410161715613227575081810a63ffffffff8111156132225761322261337d565b610a9f565b613231838361312e565b8063ffffffff048211156132475761324761337d565b029392505050565b600063ffffffff8381169083168181101561326c5761326c61337d565b039392505050565b805160208201516001600160d01b031980821692919060068310156132a35780818460060360031b1b83161693505b505050919050565b60005b838110156132c65781810151838201526020016132ae565b838111156132d5576000848401525b50505050565b600063ffffffff8216806132f1576132f161337d565b6000190192915050565b600060001982141561330f5761330f61337d565b5060010190565b600063ffffffff808316818114156133305761333061337d565b6001019392505050565b600060ff821660ff8114156133515761335161337d565b60010192915050565b600063ffffffff8084168061337157613371613393565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146133ea57600080fd5b5056fea26469706673582212201a8dbc237acdf670448ab1864f8471fc5444a449618233fba507cd4e75dd247a64736f6c63430008050033";

export class OpenVAnchor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpenVAnchor> {
    return super.deploy(
      _levels,
      _hasher,
      _handler,
      _token,
      overrides || {}
    ) as Promise<OpenVAnchor>;
  }
  getDeployTransaction(
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _levels,
      _hasher,
      _handler,
      _token,
      overrides || {}
    );
  }
  attach(address: string): OpenVAnchor {
    return super.attach(address) as OpenVAnchor;
  }
  connect(signer: Signer): OpenVAnchor__factory {
    return super.connect(signer) as OpenVAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenVAnchorInterface {
    return new utils.Interface(_abi) as OpenVAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenVAnchor {
    return new Contract(address, _abi, signerOrProvider) as OpenVAnchor;
  }
}
