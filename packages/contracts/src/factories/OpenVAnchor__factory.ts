/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OpenVAnchor, OpenVAnchorInterface } from "../OpenVAnchor";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "EdgeUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "leafIndex",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Insertion",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "NewCommitment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "nullifier",
        type: "bytes32",
      },
    ],
    name: "NewNullifier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "PublicKey",
    type: "event",
  },
  {
    inputs: [],
    name: "EVM_CHAIN_ID_TYPE",
    outputs: [
      {
        internalType: "bytes2",
        name: "",
        type: "bytes2",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_EXT_AMOUNT",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
    ],
    name: "_executeWrapping",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "commitments",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMaximumDepositLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "configureMinimalWithdrawalLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "currentNeighborRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeExistsForChain",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "edgeList",
    outputs: [
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafIndex",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "srcResourceID",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtrees",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainIdType",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborEdges",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "latestLeafIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "srcResourceID",
            type: "bytes32",
          },
        ],
        internalType: "struct OpenLinkableAnchor.Edge[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLatestNeighborRoots",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalNonce",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "handler",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_chainID",
        type: "uint256",
      },
    ],
    name: "hasEdge",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IHasher",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRight",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IHasher",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minimalWithdrawalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maximumDepositAmount",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_neighborChainID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownNeighborRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nullifierHash",
        type: "bytes32",
      },
    ],
    name: "isSpent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_nullifierHashes",
        type: "bytes32[]",
      },
    ],
    name: "isSpentArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_roots",
        type: "bytes32[]",
      },
    ],
    name: "isValidRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maximumDepositAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimalWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "neighborRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndex",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifierHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_resourceId",
        type: "bytes32",
      },
    ],
    name: "parseChainIdFromResourceId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roots",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "latestLeafindex",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_handler",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_nonce",
        type: "uint32",
      },
    ],
    name: "setHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_withdrawAmount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unwrapIntoToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "_leafIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_srcResourceID",
        type: "bytes32",
      },
    ],
    name: "updateEdge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "delegatedCalldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "blinding",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint32",
        name: "commitmentIndex",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "destinationChainId",
        type: "uint48",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "delegatedCalldata",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blinding",
        type: "uint256",
      },
    ],
    name: "wrapAndDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "wrapToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000805462010000600160501b03191690556005805463ffffffff191690553480156200003057600080fd5b5060405162003a4c38038062003a4c833981016040819052620000539162000396565b838383808284828282808260008263ffffffff1611620000c65760405162461bcd60e51b815260206004820152602360248201527f5f6c6576656c732073686f756c642062652067726561746572207468616e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b60208263ffffffff16106200011e5760405162461bcd60e51b815260206004820152601e60248201527f5f6c6576656c732073686f756c64206265206c657373207468616e20333200006044820152606401620000bd565b6000805463ffffffff60501b19166a010000000000000000000063ffffffff851602178155600280546001600160a01b0319166001600160a01b0384161790555b8263ffffffff168163ffffffff1610156200022457600254604051631d052ab160e31b815263ffffffff831660048201526001600160a01b039091169063e82955889060240160206040518083038186803b158015620001be57600080fd5b505afa158015620001d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f991906200037c565b63ffffffff8216600090815260036020526040902055806200021b816200042e565b9150506200015f565b506040805180820190915260025481906001600160a01b031663e82955886200024f60018762000406565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b1580156200028d57600080fd5b505afa158015620002a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002c891906200037c565b8152600060209182018190528052600180825282517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49559101517fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a55600455505060058054600160201b600160c01b0319166401000000006001600160a01b03959095169490940293909317909255505050505060609390931b6001600160601b0319166080525062000484945050505050565b6000602082840312156200038f57600080fd5b5051919050565b60008060008060808587031215620003ad57600080fd5b845163ffffffff81168114620003c257600080fd5b6020860151909450620003d5816200046b565b6040860151909350620003e8816200046b565b6060860151909250620003fb816200046b565b939692955090935050565b600063ffffffff8381169083168181101562000426576200042662000455565b039392505050565b600063ffffffff808316818114156200044b576200044b62000455565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b03811681146200048157600080fd5b50565b60805160601c613563620004e9600039600081816109f801528181610d2301528181610ec701528181610fa201528181611320015281816117d9015281816118a90152818161193f015281816123f50152818161248d01526124da01526135636000f3fe6080604052600436106102e45760003560e01c80638c0d34d811610190578063c2b40ae4116100dc578063e70ea87c11610095578063f178e47c1161006f578063f178e47c14610989578063fa731687146109b6578063fc0c546a146109e6578063fc7e9c6f14610a1a57600080fd5b8063e70ea87c14610908578063ec73295914610935578063ed33639f1461096957600080fd5b8063c2b40ae4146107da578063c80916d414610823578063cd87a3b414610863578063dbc916b814610878578063e4a30116146108b8578063e5285dcc146108d857600080fd5b806394eee06011610149578063a07b7e1d11610123578063a07b7e1d1461075b578063ba70f7571461076e578063bc063e1a146105c1578063c2230d6e1461079c57600080fd5b806394eee0601461071b5780639fa12d0b1461072e5780639ff80063146104dd57600080fd5b80638c0d34d8146106505780638c832b13146106725780638ea3099e146106925780638f1c56bd146106b257806390eeb02b146106c857806392156311146106eb57600080fd5b80634ecf518b1161024f57806372c1ad03116102085780637fe24ffe116101e25780637fe24ffe146105c1578063839df945146105d9578063840b2791146106095780638b7e87821461061f57600080fd5b806372c1ad031461057857806378abb49b146105985780637c2ec684146105ae57600080fd5b80634ecf518b146104b95780634f401241146104dd5780635d2d766c146104fd578063616e0957146105305780636ad481f3146105505780636d9833e31461055857600080fd5b806339f47693116102a157806339f47693146103db5780633f3d02ae146103ee578063414a37ba1461040157806343e7119f14610435578063460b53e31461046d5780634c830cbd1461048d57600080fd5b80630b27fb9a146102e957806311e4dcb91461031a57806317cc915c1461034a5780631e6276171461037a5780631f7f99f71461039c5780633408e470146103be575b600080fd5b3480156102f557600080fd5b5060055463ffffffff165b60405163ffffffff90911681526020015b60405180910390f35b34801561032657600080fd5b5061033a610335366004612f23565b610a3e565b6040519015158152602001610311565b34801561035657600080fd5b5061033a610365366004612e87565b600b6020526000908152604090205460ff1681565b34801561038657600080fd5b5061038f610ad3565b60405161031191906130a1565b3480156103a857600080fd5b506103bc6103b7366004612f45565b610c6f565b005b3480156103ca57600080fd5b50465b604051908152602001610311565b6103bc6103e9366004612cb1565b610cc8565b6103bc6103fc366004612cdd565b610d89565b34801561040d57600080fd5b506103cd7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b34801561044157600080fd5b506103cd610450366004612f45565b600960209081526000928352604080842090915290825290205481565b34801561047957600080fd5b506103bc610488366004612cb1565b610e9b565b34801561049957600080fd5b506104a2610f28565b60405165ffffffffffff9091168152602001610311565b3480156104c557600080fd5b5060005461030090600160501b900463ffffffff1681565b3480156104e957600080fd5b506103bc6104f8366004612cb1565b610f76565b34801561050957600080fd5b50610300610518366004612e87565b600a6020526000908152604090205463ffffffff1681565b34801561053c57600080fd5b5061033a61054b366004612e29565b610fd1565b6103bc6112fd565b34801561056457600080fd5b5061033a610573366004612e87565b611388565b34801561058457600080fd5b506103bc610593366004612d80565b611409565b3480156105a457600080fd5b506103cd600f5481565b6103bc6105bc366004612f68565b61158d565b3480156105cd57600080fd5b506103cd600160f81b81565b3480156105e557600080fd5b5061033a6105f4366004612e87565b600c6020526000908152604090205460ff1681565b34801561061557600080fd5b506103cd600e5481565b34801561062b57600080fd5b50610637600160f81b81565b6040516001600160f01b03199091168152602001610311565b34801561065c57600080fd5b5061066561165d565b60405161031191906130d9565b34801561067e57600080fd5b506103bc61068d366004612f45565b6116e4565b34801561069e57600080fd5b506103cd6106ad366004612eee565b611734565b3480156106be57600080fd5b506103cd600d5481565b3480156106d457600080fd5b506000546103009062010000900463ffffffff1681565b3480156106f757600080fd5b5061033a610706366004612e87565b60009081526007602052604090205460ff1690565b6103bc610729366004612cb1565b6117c0565b34801561073a57600080fd5b5061074e610749366004612db5565b611975565b604051610311919061305b565b6103bc610769366004612eb9565b611a3d565b34801561077a57600080fd5b506000805462010000900463ffffffff168152600160205260409020546103cd565b3480156107a857600080fd5b506107c26107b7366004612e87565b65ffffffffffff1690565b6040516001600160401b039091168152602001610311565b3480156107e657600080fd5b5061080e6107f5366004612e87565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610311565b34801561082f57600080fd5b5060055461084b9064010000000090046001600160a01b031681565b6040516001600160a01b039091168152602001610311565b34801561086f57600080fd5b50610300601e81565b34801561088457600080fd5b50610898610893366004612e87565b611f9a565b604080519485526020850193909352918301526060820152608001610311565b3480156108c457600080fd5b506103bc6108d3366004612f23565b611fd4565b3480156108e457600080fd5b5061033a6108f3366004612e87565b6000908152600b602052604090205460ff1690565b34801561091457600080fd5b506103cd610923366004612e87565b60066020526000908152604090205481565b34801561094157600080fd5b506103cd7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b34801561097557600080fd5b5060025461084b906001600160a01b031681565b34801561099557600080fd5b506103cd6109a4366004612e87565b60036020526000908152604090205481565b3480156109c257600080fd5b5061033a6109d1366004612e87565b60076020526000908152604090205460ff1681565b3480156109f257600080fd5b5061084b7f000000000000000000000000000000000000000000000000000000000000000081565b348015610a2657600080fd5b5060005461030090600160301b900463ffffffff1681565b600081610a4d57506000610acd565b6000838152600a602052604090205463ffffffff16805b600085815260096020908152604080832063ffffffff85168452909152902054841415610a9657600192505050610acd565b63ffffffff8116610aa55750601e5b80610aaf8161341e565b9150508163ffffffff168163ffffffff161415610a64576000925050505b92915050565b600854606090600090610ae790600161320e565b6001600160401b03811115610afe57610afe613502565b604051908082528060200260200182016040528015610b27578160200160208202803683370190505b50905060005b600854811015610c6957610b4281600161320e565b60085410610b925760088181548110610b5d57610b5d6134ec565b906000526020600020906004020160010154828281518110610b8157610b816134ec565b602002602001018181525050610c57565b6002546000546001600160a01b039091169063e829558890610bc390600190600160501b900463ffffffff16613392565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b158015610c0057600080fd5b505afa158015610c14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c389190612ea0565b828281518110610c4a57610c4a6134ec565b6020026020010181815250505b80610c618161343e565b915050610b2d565b50919050565b60055464010000000090046001600160a01b03163314610caa5760405162461bcd60e51b8152600401610ca1906131a7565b60405180910390fd5b6005805463ffffffff191663ffffffff8316179055600e8290555050565b60026004541415610ceb5760405162461bcd60e51b8152600401610ca190613170565b60026004908155604051632404142f60e11b81526001600160a01b0384811692820192909252602481018390523360448201819052917f00000000000000000000000000000000000000000000000000000000000000001690634808285e90606401600060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505060016004555050505050565b60026004541415610dac5760405162461bcd60e51b8152600401610ca190613170565b6002600455604080518082019091526008815267776974686472617760c01b6020820152610dd9906120fd565b6000610de3610f28565b8789888051906020012088604051602001610e02959493929190613017565b604051602081830303815290604052805190602001209050610e2684828585612143565b610e695760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21026b2b935b63290283937b7b360611b6044820152606401610ca1565b610e7330886123dd565b6000908152600b60205260409020805460ff1916600190811790915560045550505050505050565b604051630594d27160e31b81523360048201526001600160a01b038381166024830152604482018390527f00000000000000000000000000000000000000000000000000000000000000001690632ca69388906064015b600060405180830381600087803b158015610f0c57600080fd5b505af1158015610f20573d6000803e3d6000fd5b505050505050565b60408051600160f81b602082018190524660e01b6001600160e01b03198116602284015283518084036006018152602690930190935260009291610f6b816133b7565b60d01c935050505090565b60405163130e405b60e11b81523360048201526001600160a01b038381166024830152604482018390527f0000000000000000000000000000000000000000000000000000000000000000169063261c80b690606401610ef2565b6000610ff682600081518110610fe957610fe96134ec565b6020026020010151611388565b6110425760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f742066696e6420796f7572206d65726b6c6520726f6f74000000006044820152606401610ca1565b60085461105090600161320e565b82511461109f5760405162461bcd60e51b815260206004820152601b60248201527f496e636f727265637420726f6f74206172726179206c656e67746800000000006044820152606401610ca1565b600160005b6008548110156111a6576000600882815481106110c3576110c36134ec565b9060005260206000209060040201604051806080016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050905061113981600001518684600161111c919061320e565b8151811061112c5761112c6134ec565b6020026020010151610a3e565b6111855760405162461bcd60e51b815260206004820152601760248201527f4e65696768626f7220726f6f74206e6f7420666f756e640000000000000000006044820152606401610ca1565b8261118f8161343e565b93505050808061119e9061343e565b9150506110a4565b505b6008546111b690600161320e565b81146112f4576002546000546001600160a01b039091169063e8295588906111ed90600190600160501b900463ffffffff16613392565b6040516001600160e01b031960e084901b16815263ffffffff91909116600482015260240160206040518083038186803b15801561122a57600080fd5b505afa15801561123e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112629190612ea0565b838281518110611274576112746134ec565b6020026020010151146112e25760405162461bcd60e51b815260206004820152603060248201527f6e6f6e2d6578697374656e742065646765206973206e6f742073657420746f2060448201526f1d1a1948191959985d5b1d081c9bdbdd60821b6064820152608401610ca1565b806112ec8161343e565b9150506111a8565b50600192915050565b604051630594d27160e31b815233600482015260006024820181905260448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632ca693889034906064016000604051808303818588803b15801561136d57600080fd5b505af1158015611381573d6000803e3d6000fd5b5050505050565b60008161139757506000919050565b60005462010000900463ffffffff16805b63ffffffff81166000908152600160205260409020548414156113cf575060019392505050565b63ffffffff81166113de5750601e5b806113e88161341e565b9150508163ffffffff168163ffffffff1614156113a8575060009392505050565b60055464010000000090046001600160a01b0316331461143b5760405162461bcd60e51b8152600401610ca1906131a7565b6001600160a01b0382166114875760405162461bcd60e51b8152602060048201526013602482015272048616e646c65722063616e6e6f74206265203606c1b6044820152606401610ca1565b60055463ffffffff8083169116106114d15760405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606401610ca1565b6005546114e69063ffffffff16610418613226565b63ffffffff168163ffffffff16106115505760405162461bcd60e51b815260206004820152602760248201527f4e6f6e6365206d757374206e6f7420696e6372656d656e74206d6f72652074686044820152660c2dc40626068760cb1b6064820152608401610ca1565b600580546001600160c01b0319166401000000006001600160a01b03949094169390930263ffffffff19169290921763ffffffff91909116179055565b600260045414156115b05760405162461bcd60e51b8152600401610ca190613170565b6002600455600f5486111561161a5760405162461bcd60e51b815260206004820152602a60248201527f616d6f756e74206973206c6172676572207468616e206d6178696d756d4465706044820152691bdcda5d105b5bdd5b9d60b21b6064820152608401610ca1565b600085878686805190602001208560405160200161163c959493929190613017565b604051602081830303815290604052805190602001209050610d7b8161253b565b60606008805480602002602001604051908101604052809291908181526020016000905b828210156116db578382906000526020600020906004020160405180608001604052908160008201548152602001600182015481526020016002820154815260200160038201548152505081526020019060010190611681565b50505050905090565b60055464010000000090046001600160a01b031633146117165760405162461bcd60e51b8152600401610ca1906131a7565b6005805463ffffffff191663ffffffff8316179055600f8290555050565b604051635bb9399560e01b815260048101839052602481018290526000906001600160a01b03851690635bb939959060440160206040518083038186803b15801561177e57600080fd5b505afa158015611792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b69190612ea0565b90505b9392505050565b604051634b66a6ff60e11b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396cd4dfe9060240160206040518083038186803b15801561182357600080fd5b505afa158015611837573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185b9190612ea0565b90506001600160a01b03831661190d5780341461187757600080fd5b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152600060448301523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084015b6000604051808303818588803b1580156118ef57600080fd5b505af1158015611903573d6000803e3d6000fd5b5050505050505050565b604051633d97186b60e11b81523360048201526001600160a01b038481166024830152604482018390523060648301527f00000000000000000000000000000000000000000000000000000000000000001690637b2e30d69034906084016118d6565b505050565b60606000826001600160401b0381111561199157611991613502565b6040519080825280602002602001820160405280156119ba578160200160208202803683370190505b50905060005b83811015611a35576119f98585838181106119dd576119dd6134ec565b905060200201356000908152600b602052604090205460ff1690565b15611a23576001828281518110611a1257611a126134ec565b911515602092830291909101909101525b80611a2d8161343e565b9150506119c0565b509392505050565b60055464010000000090046001600160a01b03163314611a6f5760405162461bcd60e51b8152600401610ca1906131a7565b60026004541415611a925760405162461bcd60e51b8152600401610ca190613170565b6002600455600065ffffffffffff8216604051639215631160e01b81526001600160401b0382166004820152909150309063921563119060240160206040518083038186803b158015611ae457600080fd5b505afa158015611af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1c9190612e65565b15611e31576001600160401b0381166000908152600660205260409020546008805463ffffffff861692908110611b5557611b556134ec565b90600052602060002090600402016002015410611bb45760405162461bcd60e51b815260206004820152601e60248201527f4e6577206c65616620696e646578206d757374206265206772656174657200006044820152606401610ca1565b600860066000836001600160401b031681526020019081526020016000205481548110611be357611be36134ec565b90600052602060002090600402016002015462010000611c03919061320e565b8363ffffffff1610611c675760405162461bcd60e51b815260206004820152602760248201527f4e6577206c65616620696e646578206d7573742077697468696e20325e3136206044820152667570646174657360c81b6064820152608401610ca1565b600860066000836001600160401b031681526020019081526020016000205481548110611c9657611c966134ec565b9060005260206000209060040201600301548214611cf65760405162461bcd60e51b815260206004820152601e60248201527f7372635265736f757263654944206d757374206265207468652073616d6500006044820152606401610ca1565b6001600160401b0381166000908152600660205260409020546008805463ffffffff8616919083908110611d2c57611d2c6134ec565b9060005260206000209060040201600201819055508460088281548110611d5557611d556134ec565b6000918252602080832060016004909302018201939093556001600160401b0385168252600a90925260408120549091601e91611d9a9163ffffffff90911690613226565b611da4919061349d565b6001600160401b0384166000818152600a60209081526040808320805463ffffffff191663ffffffff878116918217909255600984528285209085528352928190208b905580519384529189169083015281018890529091507f675e61f04bcf314a9c310a93f2346f417a03d704c1caf9c6af8a65ad8addfa3f9060600160405180910390a15050611f8f565b6001600160401b0381166000818152600760209081526040808320805460ff191660019081179091556008805483516080810185528781528086018c815263ffffffff8c1682870181815260608085018e81529786018755958a528351600486027ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee381019190915592517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee4840155517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee583015594517ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee690910155878752600686528487208290556009865284872087805286528487208c9055845197885294870192909252918501899052939192917fcf4749969bace1552af6a97fe7e4affedf68875511f9746c6332eb40647b3054910160405180910390a15050505b505060016004555050565b60088181548110611faa57600080fd5b60009182526020909120600490910201805460018201546002830154600390930154919350919084565b600054610100900460ff1615808015611ff45750600054600160ff909116105b8061200e5750303b15801561200e575060005460ff166001145b6120715760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610ca1565b6000805460ff191660011790558015612094576000805461ff0019166101001790555b6005805463ffffffff191690556120aa83600e55565b6120b382600f55565b8015611970576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b61214081604051602401612111919061313d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526125a5565b50565b60008383825b87518160ff1610156122f35761216060028361349d565b63ffffffff166122205760025488516001600160a01b0390911690635bb939959085908b9060ff8616908110612198576121986134ec565b602002602001015160001c6040518363ffffffff1660e01b81526004016121c9929190918252602082015260400190565b60206040518083038186803b1580156121e157600080fd5b505afa1580156121f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122199190612ea0565b92506122d4565b60025488516001600160a01b0390911690635bb93995908a9060ff851690811061224c5761224c6134ec565b602002602001015160001c8560001c6040518363ffffffff1660e01b8152600401612281929190918252602082015260400190565b60206040518083038186803b15801561229957600080fd5b505afa1580156122ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122d19190612ea0565b92505b6122df60028361324e565b9150806122eb8161347d565b915050612149565b506123216040518060400160405280600c81526020016b086aaa4a49c9e888a9082a6960a31b8152506120fd565b61232a826125c6565b6000805b60085481101561238157818061236d575061236d60088281548110612355576123556134ec565b90600052602060002090600402016000015487610a3e565b9150806123798161343e565b91505061232e565b508080612392575061239285611388565b9050806123d05760405162461bcd60e51b815260206004820152600c60248201526b125b9d985b1a59081c9bdbdd60a21b6044820152606401610ca1565b5050909114949350505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b15801561243f57600080fd5b505afa158015612453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124779190612ea0565b90508181106124b4576119706001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461260b565b6040516340c10f1960e01b81526001600160a01b038481166004830152602482018490527f000000000000000000000000000000000000000000000000000000000000000016906340c10f1990604401600060405180830381600087803b15801561251e57600080fd5b505af1158015612532573d6000803e3d6000fd5b50505050505050565b6125448161265d565b506000547f7820cafa2ee4e973e876df3308134064ca72c7d967b1a79ff83049404deb122790829061258590600190600160301b900463ffffffff16613392565b6040805192835263ffffffff90911660208301520160405180910390a150565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b612140816040516024016125dc91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790526125a5565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611970908490612740565b6000818152600c602052604081205460ff16156126c65760405162461bcd60e51b815260206004820152602160248201527f54686520636f6d6d69746d656e7420686173206265656e207375626d697474656044820152601960fa1b6064820152608401610ca1565b60006126d183612812565b6000848152600c602052604090819020805460ff191660011790555190915083907fe77f587aa74084fff834b53ccbab07695ee4594b9c9d5bfd8a7dd80c556124b590612732908490429063ffffffff929092168252602082015260400190565b60405180910390a292915050565b6000612795826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612a909092919063ffffffff16565b80519091501561197057808060200190518101906127b39190612e65565b6119705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610ca1565b6000805463ffffffff600160301b820481169161283991600160501b9091041660026132b6565b63ffffffff168163ffffffff1614156128ad5760405162461bcd60e51b815260206004820152603060248201527f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160448201526f1d995cc818d85b88189948185919195960821b6064820152608401610ca1565b8083600080805b60005463ffffffff600160501b909104811690821610156129db576128da60028661349d565b63ffffffff1661298757600254604051631d052ab160e31b815263ffffffff831660048201528594506001600160a01b039091169063e82955889060240160206040518083038186803b15801561293057600080fd5b505afa158015612944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129689190612ea0565b63ffffffff8216600090815260036020526040902085905591506129a3565b63ffffffff811660009081526003602052604090205492508391505b6002546129ba906001600160a01b03168484611734565b93506129c760028661324e565b9450806129d381613459565b9150506128b4565b5060008054601e906129fa9062010000900463ffffffff166001613226565b612a04919061349d565b6000805465ffffffff000019166201000063ffffffff8416021790559050612a2d866001613226565b6000805469ffffffff0000000000001916600160301b63ffffffff93841681029190911780835560408051808201825298895291900483166020808901918252949093168252600193849052902094518555519301929092555091949350505050565b60606117b68484600085856001600160a01b0385163b612af25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610ca1565b600080866001600160a01b03168587604051612b0e9190612ffb565b60006040518083038185875af1925050503d8060008114612b4b576040519150601f19603f3d011682016040523d82523d6000602084013e612b50565b606091505b5091509150612b60828286612b6b565b979650505050505050565b60608315612b7a5750816117b9565b825115612b8a5782518084602001fd5b8160405162461bcd60e51b8152600401610ca1919061313d565b600082601f830112612bb557600080fd5b813560206001600160401b03821115612bd057612bd0613502565b8160051b612bdf8282016131de565b838152828101908684018388018501891015612bfa57600080fd5b600093505b85841015612c1d578035835260019390930192918401918401612bff565b50979650505050505050565b600082601f830112612c3a57600080fd5b81356001600160401b03811115612c5357612c53613502565b612c66601f8201601f19166020016131de565b818152846020838601011115612c7b57600080fd5b816020850160208301376000918101602001919091529392505050565b803563ffffffff81168114612cac57600080fd5b919050565b60008060408385031215612cc457600080fd5b8235612ccf81613518565b946020939093013593505050565b600080600080600080600060e0888a031215612cf857600080fd5b8735612d0381613518565b96506020880135955060408801356001600160401b0380821115612d2657600080fd5b612d328b838c01612c29565b965060608a0135955060808a0135915080821115612d4f57600080fd5b50612d5c8a828b01612ba4565b935050612d6b60a08901612c98565b915060c0880135905092959891949750929550565b60008060408385031215612d9357600080fd5b8235612d9e81613518565b9150612dac60208401612c98565b90509250929050565b60008060208385031215612dc857600080fd5b82356001600160401b0380821115612ddf57600080fd5b818501915085601f830112612df357600080fd5b813581811115612e0257600080fd5b8660208260051b8501011115612e1757600080fd5b60209290920196919550909350505050565b600060208284031215612e3b57600080fd5b81356001600160401b03811115612e5157600080fd5b612e5d84828501612ba4565b949350505050565b600060208284031215612e7757600080fd5b815180151581146117b957600080fd5b600060208284031215612e9957600080fd5b5035919050565b600060208284031215612eb257600080fd5b5051919050565b600080600060608486031215612ece57600080fd5b83359250612ede60208501612c98565b9150604084013590509250925092565b600080600060608486031215612f0357600080fd5b8335612f0e81613518565b95602085013595506040909401359392505050565b60008060408385031215612f3657600080fd5b50508035926020909101359150565b60008060408385031215612f5857600080fd5b82359150612dac60208401612c98565b60008060008060008060c08789031215612f8157600080fd5b86359550602087013565ffffffffffff81168114612f9e57600080fd5b94506040870135612fae81613518565b935060608701356001600160401b03811115612fc957600080fd5b612fd589828a01612c29565b9350506080870135612fe681613518565b8092505060a087013590509295509295509295565b6000825161300d8184602087016133ee565b9190910192915050565b60d09590951b6001600160d01b0319168552600685019390935260609190911b6bffffffffffffffffffffffff19166026840152603a830152605a820152607a0190565b6020808252825182820181905260009190848201906040850190845b81811015613095578351151583529284019291840191600101613077565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015613095578351835292840192918401916001016130bd565b602080825282518282018190526000919060409081850190868401855b82811015613130578151805185528681015187860152858101518686015260609081015190850152608090930192908501906001016130f6565b5091979650505050505050565b602081526000825180602084015261315c8160408501602087016133ee565b601f01601f19169190910160400192915050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526019908201527f73656e646572206973206e6f74207468652068616e646c657200000000000000604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561320657613206613502565b604052919050565b60008219821115613221576132216134c0565b500190565b600063ffffffff808316818516808303821115613245576132456134c0565b01949350505050565b600063ffffffff80841680613265576132656134d6565b92169190910492915050565b600181815b808511156132ae578163ffffffff04821115613294576132946134c0565b808516156132a157918102915b93841c9390800290613276565b509250929050565b600063ffffffff612e5d8185168285166000826132d557506001610acd565b816132e257506000610acd565b81600181146132f8576002811461330257613333565b6001915050610acd565b60ff841115613313576133136134c0565b6001841b915063ffffffff82111561332d5761332d6134c0565b50610acd565b5060208310610133831016604e8410600b841016171561336a575081810a63ffffffff811115613365576133656134c0565b610acd565b6133748383613271565b8063ffffffff0482111561338a5761338a6134c0565b029392505050565b600063ffffffff838116908316818110156133af576133af6134c0565b039392505050565b805160208201516001600160d01b031980821692919060068310156133e65780818460060360031b1b83161693505b505050919050565b60005b838110156134095781810151838201526020016133f1565b83811115613418576000848401525b50505050565b600063ffffffff821680613434576134346134c0565b6000190192915050565b6000600019821415613452576134526134c0565b5060010190565b600063ffffffff80831681811415613473576134736134c0565b6001019392505050565b600060ff821660ff811415613494576134946134c0565b60010192915050565b600063ffffffff808416806134b4576134b46134d6565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461214057600080fdfea26469706673582212203487474cc56183f4b3723e7d9a6cdfbf9690020694f71138c0846e5b85b9084564736f6c63430008050033";

export class OpenVAnchor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpenVAnchor> {
    return super.deploy(
      _levels,
      _hasher,
      _handler,
      _token,
      overrides || {}
    ) as Promise<OpenVAnchor>;
  }
  getDeployTransaction(
    _levels: BigNumberish,
    _hasher: string,
    _handler: string,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _levels,
      _hasher,
      _handler,
      _token,
      overrides || {}
    );
  }
  attach(address: string): OpenVAnchor {
    return super.attach(address) as OpenVAnchor;
  }
  connect(signer: Signer): OpenVAnchor__factory {
    return super.connect(signer) as OpenVAnchor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenVAnchorInterface {
    return new utils.Interface(_abi) as OpenVAnchorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenVAnchor {
    return new Contract(address, _abi, signerOrProvider) as OpenVAnchor;
  }
}
